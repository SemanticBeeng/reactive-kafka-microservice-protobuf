http {
  host = "0.0.0.0"
  port = "8080"
}

akka {
  loggers = ["akka.testkit.TestEventListener"]
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.DefaultLoggingFilter"

  kafka {
    consumer {
      num-consumers = "2"
      c1 {
        bootstrap-servers = "localhost:9092"
        groupId = "group1"
        subscription-topic = "TempChannel1"
        message-type = "KafkaMessage"
        poll-interval = 50ms
        poll-timeout = 50ms
        stop-timeout = 30s
        close-timeout = 20s
        commit-timeout = 15s
        wakeup-timeout = 10s
        use-dispatcher = "akka.kafka.default-dispatcher"
        kafka-clients {
          enable.auto.commit = false
        }
      }

      c2 {
        bootstrap-servers = "localhost:9092"
        groupId = "group2"
        subscription-topic = "TempChannel2"
        message-type = "ExampleAppEvent"
        poll-interval = 50ms
        poll-timeout = 50ms
        stop-timeout = 30s
        close-timeout = 20s
        commit-timeout = 15s
        wakeup-timeout = 10s
        use-dispatcher = "akka.kafka.default-dispatcher"
        kafka-clients {
          enable.auto.commit = false
        }
      }
    }

    producer {
      num-producers = "2"

      p1 {
        bootstrap-servers = "localhost:9092"
        publish-topic = "TempChannel1"
        message-type = "KafkaMessage"
        parallelism = 100
        close-timeout = 60s
        use-dispatcher = "akka.kafka.default-dispatcher"

        request.required.acks = "1"
        num.partitions = "5"
      }

      p2 {
        bootstrap-servers = "localhost:9092"
        message-type = "ExampleAppEvent"
        publish-topic = "TempChannel2"
        parallelism = 100
        close-timeout = 60s
        use-dispatcher = "akka.kafka.default-dispatcher"
        request.required.acks = "1"
        num.partitions = "5"
      }
    }
  }
}

